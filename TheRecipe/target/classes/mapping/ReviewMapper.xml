<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="review_ns">

	<resultMap id="ReviewResult" type="Review">
		<result property="r_rvcode" column="r_rvcode" /><!-- 후기코드 -->
		<result property="m_userid" column="m_userid" /><!-- 아이디 -->
		<result property="f_fdcode" column="f_fdcode" /><!-- 상품코드 -->
		<result property="r_title" column="r_title" /><!-- 제목 -->
		<result property="r_rvcontents" column="r_rvcontents" /><!-- 추기(내용) -->
		<result property="r_grade" column="r_grade" /><!-- 평점() -->
		<result property="r_rvimgname" column="r_rvimgname" /><!-- 이미지 -->
		<result property="r_rvcount" column="r_rvcount" /><!-- 조회수 -->
		<result property="r_rvdate" column="r_rvdate" /><!-- 글등록시간 -->
		<result property="r_admincmt" column="r_admincmt" /><!-- 관리자댓글 -->
		<result property="r_admindate" column="r_admindate" /><!-- 관리자댓글시간 -->
	</resultMap>
	
	<!-- 전체 후기 리스트 글 갯수 리턴 -->
	<select id="selectReviewCount" parameterType="com.increpas.therecipe.dto.ReviewListDTO"
		resultType="int">
		SELECT COUNT(*)
		FROM TR_REVIEW
		<where>			

			<if test="whereColumn.equals('ALL')">
				AND (r_title LIKE '%' || #{word } || '%' or r_rvcontents LIKE '%' || #{word } || '%')
			</if>
			
			<if test="whereColumn.equals('TITLE')">
				AND r_title LIKE '%' || #{word } || '%'
			</if>
		</where>
	</select>
	
	<!-- 후기(답변)와 리스트 갯 수를 던져 줌 -->
	<select id="selectReviewSetList" parameterType="com.increpas.therecipe.dto.ReviewListDTO"
		resultMap="ReviewResult">

		SELECT *
		FROM (

		SELECT r_rvcode, m_userid, f_fdcode, r_title,
		r_rvcontents, r_grade,
		r_rvimgname, r_rvcount, r_rvdate, r_admincmt, r_admindate, rownum rn
		FROM (

		SELECT r_rvcode, m_userid, f_fdcode, r_title,
		r_rvcontents, r_grade,
		r_rvimgname, r_rvcount, r_rvdate, r_admincmt, r_admindate
		FROM tr_review

		<!-- WHERE -->
		<where>			

			<!-- 후기에 대한 제목과 내용만 검색 -->
			<if test="whereColumn.equals('ALL')">
				and (r_title LIKE '%' || #{word } || '%' or r_rvcontents LIKE '%' || #{word } || '%')
			</if>
			<!-- 후기에 대한 제목만 검색 -->
			<if test="whereColumn.equals('TITLE')">
				AND r_title LIKE '%' || #{word } || '%'
			</if>
		</where>

		<!-- ORDER BY -->
		<choose>
			<when test="sortColumn.equals('r_title')">
				<if test="orderby.equals('ASC')">ORDER BY r_title ASC</if>
				<if test="orderby.equals('DESC')">ORDER BY r_title DESC</if>
			</when>
			<when test="sortColumn.equals('r_rvdate')">
				<if test="orderby.equals('ASC')">ORDER BY r_rvdate ASC</if>
				<if test="orderby.equals('DESC')">ORDER BY r_rvdate DESC</if>
			</when>
			<otherwise>
				ORDER BY r_rvcode DESC
			</otherwise>
		</choose>
		)
		)
		<where>
			rn between #{startRow} and #{endRow}
		</where>
	</select>
	
	<!-- 후기 조회수 증가 쿼리문 -->
	<update id="updateHitCount" parameterType="integer">
		update TR_REVIEW set r_rvcount = r_rvcount+1
		where r_rvcode=#{r_rvcode}
	</update>	
	
	<!-- 후기 상세보기 쿼리 -->
	<select id="reviewWrtByNum" parameterType="map" resultMap="ReviewResult">
		select * from tr_review where r_rvcode=#{r_rvcode}
	</select>
	
	<!-- 후기 관리자 답변등록(하지만 수정임) -->
	<update id="reviewAdminRegUp" parameterType="Review">
		update tr_review set
		r_admincmt=#{r_admincmt}, r_admindate=sysdate
		where r_rvcode=#{r_rvcode}
	</update>
	
	<!-- 후기 관리자 답변삭제(하지만 수정임) -->
	<update id="reviewAdminDelete" parameterType="Review">		
		update tr_review set
		r_admincmt=null, r_admindate=null
		where r_rvcode=#{r_rvcode}
	</update>
				
	
</mapper>