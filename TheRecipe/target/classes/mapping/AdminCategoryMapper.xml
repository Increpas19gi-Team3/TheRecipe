<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="foodcode_ns">
	<!--  속성명과 컬럼명 일치하는 경우 컬럼명 생략 가능
	        순서를 컬럼순서대로 함 O(자바객체)R(결과집합의 행)매핑 -->
	        
	<resultMap id="FoodcodeResult" type="Foodcode"> 
		<result property="fc_1st" column="fc_1st" />
		<result property="fc_2nd" column="fc_2nd" />
		<result property="fc_3rd" column="fc_3rd" />
		<result property="fc_ctgname" column="fc_ctgname" />
		<result property="fc_isblock" column="fc_isblock" />
	</resultMap>
	
	
	<resultMap id="FoodcodeWithFoodCntResult" type="FoodcodeWithFoodCnt"> 
		<result property="fc_1st" column="fc_1st" />
		<result property="fc_2nd" column="fc_2nd" />
		<result property="fc_3rd" column="fc_3rd" />
		<result property="fc_ctgname" column="fc_ctgname" />
		<result property="fc_isblock" column="fc_isblock" />
		<result property="regfoodcnt" column="regfoodcnt" />
	</resultMap>
	
	
	<!-- 전체 음식코드 + subQuery Food Count() -->
	<select id="selectAllFoodcodeWithFoodCnt" resultMap="FoodcodeWithFoodCntResult"> 
		SELECT TR_FOODCODE.FC_1ST, TR_FOODCODE.FC_2ND, TR_FOODCODE.FC_3RD, TR_FOODCODE.FC_CTGNAME,
		    (
		        SELECT COUNT(*) FROM TR_FOOD 
		        WHERE TR_FOODCODE.FC_1ST = TR_FOOD.FC_1ST 
		            AND TR_FOODCODE.FC_2ND = TR_FOOD.FC_2ND 
		            AND TR_FOODCODE.FC_3RD = TR_FOOD.FC_3RD
		        ) AS REGFOODCNT, FC_ISBLOCK		        
		FROM TR_FOODCODE 
		ORDER BY TR_FOODCODE.FC_1ST ASC, TR_FOODCODE.FC_2ND ASC, TR_FOODCODE.FC_3RD ASC
	</select>
	
	
	<!-- 대분류(1st)  + subQuery Food Count() 만 가져오기 -->
	<select id="select1stFoodcodeWithFoodCnt" resultMap="FoodcodeWithFoodCntResult">
		SELECT FC_1ST, FC_2ND, FC_3RD, FC_CTGNAME, 
			(
		        SELECT COUNT(*) FROM TR_FOOD 
		        WHERE TR_FOODCODE.FC_1ST = TR_FOOD.FC_1ST 
		    ) AS REGFOODCNT, FC_ISBLOCK 
		FROM TR_FOODCODE 
		WHERE FC_2ND = '0' AND FC_3RD = '0'
		ORDER BY FC_1ST ASC, FC_2ND ASC, FC_3RD ASC
	</select>
	
	<!-- 지역 > 중분류 (2nd)  + subQuery Food Count() 만 가져오기 -->
	<select id="select2ndFoodcodeWithFoodCnt" resultMap="FoodcodeWithFoodCntResult">
		SELECT FC_1ST, FC_2ND, FC_3RD, FC_CTGNAME, 
			(
		        SELECT COUNT(*) FROM TR_FOOD 
		        WHERE TR_FOODCODE.FC_1ST = TR_FOOD.FC_1ST 
		            AND TR_FOODCODE.FC_2ND = TR_FOOD.FC_2ND 
		        ) AS REGFOODCNT, FC_ISBLOCK   
		FROM TR_FOODCODE 
		WHERE FC_2ND != '0' AND FC_3RD = '0'
		ORDER BY FC_1ST ASC, FC_2ND ASC, FC_3RD ASC
	</select>
	

	<!-- 지역 > 중분류 > 소분류(3rd)  + subQuery Food Count() 만 가져오기 -->
	<select id="select3rdFoodcodeWithFoodCnt" resultMap="FoodcodeWithFoodCntResult">
		SELECT FC_1ST, FC_2ND, FC_3RD, FC_CTGNAME, (
		        SELECT COUNT(*) FROM TR_FOOD 
		        WHERE TR_FOODCODE.FC_1ST = TR_FOOD.FC_1ST 
		            AND TR_FOODCODE.FC_2ND = TR_FOOD.FC_2ND 
		            AND TR_FOODCODE.FC_3RD = TR_FOOD.FC_3RD
		        ) AS REGFOODCNT, FC_ISBLOCK   
		FROM TR_FOODCODE 
		WHERE FC_2ND != '0' AND FC_3RD != '0'
		ORDER BY FC_1ST ASC, FC_2ND ASC, FC_3RD ASC
	</select>
	
	
	
	
	
	<!-- FoodCode Only -->
	
	<!-- 전체 음식코드 가져오기 -->
	<select id="selectAllFoodcode" resultMap="FoodcodeResult">
		SELECT FC_1ST, FC_2ND, FC_3RD, FC_CTGNAME, FC_ISBLOCK 		
		FROM TR_FOODCODE 
		ORDER BY FC_1ST ASC, FC_2ND ASC, FC_3RD ASC
	</select>
	
	
	<!-- 대분류(1st)만 가져오기 -->
	<select id="select1stFoodcode" resultMap="FoodcodeResult">
		SELECT FC_1ST, FC_2ND, FC_3RD, FC_CTGNAME, FC_ISBLOCK 
		FROM TR_FOODCODE 
		WHERE FC_2ND = '0' AND FC_3RD = '0'
		ORDER BY FC_1ST ASC, FC_2ND ASC, FC_3RD ASC
	</select>
	
	<!-- 지역 > 중분류 (2nd)만 가져오기 -->
	<select id="select2ndFoodcode" resultMap="FoodcodeResult">
		SELECT FC_1ST, FC_2ND, FC_3RD, FC_CTGNAME, FC_ISBLOCK   
		FROM TR_FOODCODE 
		WHERE FC_2ND != '0' AND FC_3RD = '0'
		ORDER BY FC_1ST ASC, FC_2ND ASC, FC_3RD ASC
	</select>
	

	<!-- 지역 > 중분류 > 소분류(3rd)만 가져오기 -->
	<select id="select3rdFoodcode" resultMap="FoodcodeResult">
		SELECT FC_1ST, FC_2ND, FC_3RD, FC_CTGNAME, FC_ISBLOCK   
		FROM TR_FOODCODE 
		WHERE FC_2ND != '0' AND FC_3RD != '0'
		ORDER BY FC_1ST ASC, FC_2ND ASC, FC_3RD ASC
	</select>
	
	
	<!-- 2nd 최대값 -->
	<select id="select2ndMax" resultType="int" parameterType="string">
		SELECT MAX(FC_2ND) 
		FROM TR_FOODCODE 
		WHERE FC_1ST = #{fc_1st}
	</select>
	
	<!-- 3rd 최대값 -->
	<select id="select3rdMax" resultType="int" parameterType="map">
		SELECT MAX(FC_3RD) 
		FROM TR_FOODCODE 
		WHERE FC_1ST = #{fc_1st} AND FC_2ND=#{fc_2nd}
	</select>
	
	
	
	 <!-- 등록: 중분류  -->
	<insert id="reg2ndFoodcode" parameterType="Foodcode">
		INSERT INTO TR_FOODCODE 
		VALUES(
			#{fc_1st},
    		(
	    		SELECT MAX(FC_2ND)+1 
	    		FROM TR_FOODCODE 
	    		WHERE FC_1ST = #{fc_1st}
    		)
    		,0, #{fc_ctgname}, #{fc_isblock}
    	)	
	</insert>
	
	<!-- 등록: 소분류  -->
	<insert id="reg3rdFoodcode" parameterType="Foodcode">
		INSERT INTO TR_FOODCODE 
		VALUES(
			#{fc_1st}, #{fc_2nd}, 
    		(
    			SELECT MAX(FC_3RD)+1 
    			FROM TR_FOODCODE 
    			WHERE FC_1ST = #{fc_1st} AND FC_2ND = #{fc_2nd}
    		),
    		#{fc_ctgname}, #{fc_isblock}
    	)	
	</insert>


	<!-- 수정: 코드 이름  -->
	<update id="modifyFc_ctgnameFoodcode" parameterType="Foodcode">
		UPDATE TR_FOODCODE 
		SET FC_CTGNAME = #{fc_ctgname}, FC_ISBLOCK = ${fc_isblock}
		WHERE FC_1ST = #{fc_1st} AND FC_2ND = #{fc_2nd} AND FC_3RD = #{fc_3rd}
	</update>
	
	
	
	<!-- 삭제: 삭제 전 TR_FOOD 테이블에서 사용중인지 확인 -->
	<select id="checkBeforDelete" parameterType="Foodcode">
		SELECT COUNT(F_FDCODE) 
		FROM TR_FOOD
		WHERE FC_1ST=#{fc_1st} AND FC_2ND=#{fc_2nd} AND FC_3RD=#{fc_3rd}
	</select>
	
	
	
</mapper>