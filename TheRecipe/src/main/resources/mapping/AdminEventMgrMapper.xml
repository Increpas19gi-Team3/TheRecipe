<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
/**
 * 상품테이블(tr_food) + Join + 음식 분류코드(tr_foodcode)
 * @author 손가연
 *
 */
 -->

<mapper namespace="adminEventMgr_ns">

	<!-- 이벤트 정보 -->
	<resultMap id="EventInfoResult" type="EventInfo" >
		<result property="e_evtcode" column="e_evtcode" />
		<result property="e_nttilte" column="e_nttilte" />
		<result property="e_gubun" column="e_gubun" />
		<result property="e_startdate" column="e_startdate" />
		<result property="today" column="today" />
		<result property="e_enddate" column="e_enddate" />
		<result property="discount_value" column="discount_value" />
	</resultMap>
	
	
	<!-- 음식 정보 + 이벤트 정보  -->
	<resultMap id="EventSetFoodResult" type="EventSetFood" >
		<result property="f_fdcode" column="f_fdcode" />
		<result property="e_evtcode" column="e_evtcode" />
		<result property="e_nttilte" column="e_nttilte" />
		<result property="e_startdate" column="e_startdate" />
		<result property="e_enddate" column="e_enddate" />
		<result property="today" column="today" />
		<result property="fc_1st" column="fc_1st" />
		<result property="fc_2nd" column="fc_2nd" />
		<result property="fc_3rd" column="fc_3rd" />
		<result property="f_foodname" column="f_foodname" />
		<result property="f_price" column="f_price" />
		<result property="f_isblock" column="f_isblock" />
		<result property="ms_code" column="ms_code" />
		<result property="e_discount" column="e_discount" />
		
		<!-- 서브쿼리 데이터 -->
		<result property="fc_isblock" column="fc_isblock" />
		<result property="fcname_1st" column="fcname_1st" />
		<result property="fcname_2nd" column="fcname_2nd" />
		<result property="fcname_3rd" column="fcname_3rd" />
		<result property="discount_value" column="discount_value" />
	</resultMap>


	<!-- 전체 이벤트 가져오기 -->
	<select id="selectAllEvent" resultMap="EventInfoResult">
		SELECT E_EVTCODE, E_NTTILTE, E_STARTDATE, SYSDATE AS TODAY, E_ENDDATE,
		    (
		        SELECT SC.SUB_NAME FROM TR_MASTERCODE MC 
		        INNER JOIN TR_SUBCODE SC 
		        ON MC.MS_CODE = SC.MS_CODE
		        WHERE TE.MS_CODE = MC.MS_CODE AND TE.E_DISCOUNT = SC.SUB_CODE
		    ) AS DISCOUNT_VALUE
		FROM TR_EVENT TE
		WHERE E_GUBUN = 1
	</select>
	
	
	
	<!-- 오늘 기준(오늘 <= 이벤트 종료일) 전체 이벤트 가져오기 -->
	<select id="selectAllEventToday" resultMap="EventInfoResult">
		<![CDATA[SELECT E_EVTCODE, E_NTTILTE, E_STARTDATE, SYSDATE AS TODAY, E_ENDDATE,
		    (
		        SELECT SC.SUB_NAME FROM TR_MASTERCODE MC 
		        INNER JOIN TR_SUBCODE SC 
		        ON MC.MS_CODE = SC.MS_CODE
		        WHERE TE.MS_CODE = MC.MS_CODE AND TE.E_DISCOUNT = SC.SUB_CODE
		    ) AS DISCOUNT_VALUE
		FROM TR_EVENT TE
		WHERE E_GUBUN = 1 AND SYSDATE <= E_ENDDATE ]]>
	</select>
	
	
	
	<!-- 선택 이벤트 상세 정보 가져오기 -->
	<select id="selectSelEvent" resultMap="EventInfoResult" parameterType="string">
		SELECT E_EVTCODE, E_NTTILTE, E_STARTDATE, SYSDATE AS TODAY, E_ENDDATE,
		    (
		        SELECT SC.SUB_NAME FROM TR_MASTERCODE MC 
		        INNER JOIN TR_SUBCODE SC 
		        ON MC.MS_CODE = SC.MS_CODE
		        WHERE TE.MS_CODE = MC.MS_CODE AND TE.E_DISCOUNT = SC.SUB_CODE
		    ) AS DISCOUNT_VALUE
		FROM TR_EVENT TE
		<where>
			E_GUBUN = 1
			<if test="!e_evtcode.equals('ALL')">AND E_EVTCODE= #{e_evtcode} </if>
			<!-- <if test="">AND TE.E_EVTCODE= #{e_evtcode} </if> -->
		</where>
	</select>
	
	
	
	<!-- 선택한 이벤트가 걸린 음식정보 가져오기 : 페이징X, 검색X, 정렬X -->
	<select id="selectSelEventFood" resultMap="EventSetFoodResult" parameterType="map">
		SELECT TF.F_FDCODE, 
		    TF.E_EVTCODE, TE.E_NTTILTE, TE.E_STARTDATE, SYSDATE AS TODAY, TE.E_ENDDATE, 
		    TF.FC_1ST, (SELECT TFC.FC_CTGNAME FROM TR_FOODCODE TFC WHERE TF.FC_1ST = TFC.FC_1ST AND TFC.FC_2ND = 0 AND TFC.FC_3RD = 0) AS FCNAME_1ST, 
		    TF.FC_2ND, (SELECT TFC.FC_CTGNAME FROM TR_FOODCODE TFC WHERE TF.FC_1ST = TFC.FC_1ST AND TF.FC_2ND = TFC.FC_2ND AND TFC.FC_3RD = 0) AS FCNAME_2ND, 
		    TF.FC_3RD, (SELECT TFC.FC_CTGNAME FROM TR_FOODCODE TFC WHERE TF.FC_1ST = TFC.FC_1ST AND TF.FC_2ND = TFC.FC_2ND AND TF.FC_3RD = TFC.FC_3RD) AS FCNAME_3RD, 
		    (SELECT TFC.FC_ISBLOCK FROM TR_FOODCODE TFC WHERE TF.FC_1ST = TFC.FC_1ST AND TF.FC_2ND = TFC.FC_2ND AND TF.FC_3RD = TFC.FC_3RD) AS FC_ISBLOCK, 
		    TF.F_FOODNAME, 
		    TF.F_PRICE, TF.F_ISBLOCK, TF.MS_CODE, TE.E_DISCOUNT,
            (
		        SELECT SC.SUB_NAME FROM TR_MASTERCODE MC 
		        INNER JOIN TR_SUBCODE SC 
		        ON MC.MS_CODE = SC.MS_CODE
		        WHERE TE.MS_CODE = MC.MS_CODE AND TE.E_DISCOUNT = SC.SUB_CODE
		    ) AS DISCOUNT_VALUE
		FROM TR_FOOD TF
		LEFT OUTER JOIN TR_EVENT TE
		    ON TF.E_EVTCODE = TE.E_EVTCODE
		
		<where>
			<choose>
				<when test="evtcode.equals('ALL')"> TE.E_GUBUN IS NULL OR TE.E_GUBUN = 1</when>
				<otherwise>TE.E_EVTCODE= #{evtcode}</otherwise>
			</choose>
		</where> 
	</select>
	
	
	<!-- 전체 글갯수 리턴 -->
	<select id="selectCount" resultType="int" parameterType="com.increpas.therecipe.dto.AdminEventSetFoodListDTO">
	    SELECT COUNT(*) 				    
		FROM TR_FOOD TF
		LEFT OUTER JOIN TR_EVENT TE
		    ON TF.E_EVTCODE = TE.E_EVTCODE
		
		<where>
			<choose>
				<when test="selEventCode.equals('ALL')"> TE.E_GUBUN IS NULL OR TE.E_GUBUN = 1</when>
				<otherwise>TE.E_EVTCODE= #{selEventCode}</otherwise>
			</choose>
			
			<if test="!fc_1st.equals(0)"><!-- 대분류에 값이 있을때만 -->
				AND TF.FC_1ST = #{fc_1st} 
			</if>
			<if test="!fc_2nd.equals(0)"><!-- 중분류에 값이 있을때만 -->
				AND TF.FC_2ND = #{fc_2nd} 
			</if>
			<if test="!fc_3rd.equals(0)"><!-- 소분류에 값이 있을때만 -->
				AND TF.FC_3RD = #{fc_3rd} 
			</if>
			
			<!-- 음식명으로 검색 -->
			<if test="whereColumn.equals('FOODNAME')">
    			AND TF.F_FOODNAME LIKE '%' || #{word } || '%'
    		</if>
		</where>
	</select>
	
	
	<!-- 선택한 이벤트가 걸린 음식정보 가져오기 : 페이징O, 검색O, 정렬O -->
	<select id="selectSelEventFoodList" resultMap="EventSetFoodResult" parameterType="com.increpas.therecipe.dto.AdminEventSetFoodListDTO">
		
		SELECT * 
		FROM (

			SELECT F_FDCODE, 
				E_EVTCODE, E_NTTILTE, E_STARTDATE, TODAY, E_ENDDATE, 
				FC_1ST, FCNAME_1ST, 
				FC_2ND, FCNAME_2ND, 
				FC_3RD, FCNAME_3RD, 
				FC_ISBLOCK, 
				F_FOODNAME, 
				F_PRICE, F_ISBLOCK, MS_CODE, E_DISCOUNT, DISCOUNT_VALUE, 
				rownum rn 
			FROM (
				
				SELECT TF.F_FDCODE, 
				    TF.E_EVTCODE, TE.E_NTTILTE, TE.E_STARTDATE, SYSDATE AS TODAY, TE.E_ENDDATE, 
				    TF.FC_1ST, (SELECT TFC.FC_CTGNAME FROM TR_FOODCODE TFC WHERE TF.FC_1ST = TFC.FC_1ST AND TFC.FC_2ND = 0 AND TFC.FC_3RD = 0) AS FCNAME_1ST, 
				    TF.FC_2ND, (SELECT TFC.FC_CTGNAME FROM TR_FOODCODE TFC WHERE TF.FC_1ST = TFC.FC_1ST AND TF.FC_2ND = TFC.FC_2ND AND TFC.FC_3RD = 0) AS FCNAME_2ND, 
				    TF.FC_3RD, (SELECT TFC.FC_CTGNAME FROM TR_FOODCODE TFC WHERE TF.FC_1ST = TFC.FC_1ST AND TF.FC_2ND = TFC.FC_2ND AND TF.FC_3RD = TFC.FC_3RD) AS FCNAME_3RD, 
				    (SELECT TFC.FC_ISBLOCK FROM TR_FOODCODE TFC WHERE TF.FC_1ST = TFC.FC_1ST AND TF.FC_2ND = TFC.FC_2ND AND TF.FC_3RD = TFC.FC_3RD) AS FC_ISBLOCK, 
				    TF.F_FOODNAME, 
				    TF.F_PRICE, TF.F_ISBLOCK, TF.MS_CODE, TE.E_DISCOUNT,
		            (
				        SELECT SC.SUB_NAME FROM TR_MASTERCODE MC 
				        INNER JOIN TR_SUBCODE SC 
				        ON MC.MS_CODE = SC.MS_CODE
				        WHERE TE.MS_CODE = MC.MS_CODE AND TE.E_DISCOUNT = SC.SUB_CODE
				    ) AS DISCOUNT_VALUE
				FROM TR_FOOD TF
				LEFT OUTER JOIN TR_EVENT TE
				    ON TF.E_EVTCODE = TE.E_EVTCODE
				
				<where>
					<choose>
						<when test="!selEventCode.equals('ALL')">TE.E_EVTCODE= #{selEventCode}</when>
						<!-- <otherwise> TE.E_GUBUN IS NULL OR TE.E_GUBUN = 1</otherwise> -->
					</choose>
					
					<if test="!fc_1st.equals(0)"><!-- 대분류에 값이 있을때만 -->
						AND TF.FC_1ST = #{fc_1st} 
					</if>
					<if test="!fc_2nd.equals(0)"><!-- 중분류에 값이 있을때만 -->
						AND TF.FC_2ND = #{fc_2nd} 
					</if>
					<if test="!fc_3rd.equals(0)"><!-- 소분류에 값이 있을때만 -->
						AND TF.FC_3RD = #{fc_3rd} 
					</if>
					
					<!-- 음식명으로 검색 -->
					<if test="whereColumn.equals('FOODNAME')">
		    			AND TF.F_FOODNAME LIKE '%' || #{word } || '%'
		    		</if>
				</where>
				
				<!-- ORDER BY -->
		   		<choose>
		   			<when test="sortColumn.equals('FOODNAME')">   				
		   				<if test="orderby.equals('ASC')">ORDER BY TF.F_FOODNAME ASC, TF.FC_1ST ASC, TF.FC_2ND ASC, TF.FC_3RD ASC</if>
		   				<if test="orderby.equals('DESC')">ORDER BY TF.F_FOODNAME DESC, TF.FC_1ST ASC, TF.FC_2ND ASC, TF.FC_3RD ASC</if>   				
		   			</when>
		   			<when test="sortColumn.equals('PRICE')">
		   				<if test="orderby.equals('ASC')">ORDER BY TF.F_PRICE ASC, TF.FC_1ST ASC, TF.FC_2ND ASC, TF.FC_3RD ASC</if>
		   				<if test="orderby.equals('DESC')">ORDER BY TF.F_PRICE DESC, TF.FC_1ST ASC, TF.FC_2ND ASC, TF.FC_3RD ASC</if>
		   			</when>
		   			<otherwise>
		   				ORDER BY TE.E_EVTCODE DESC, TF.FC_1ST ASC, TF.FC_2ND ASC, TF.FC_3RD ASC
		   			</otherwise>
		   		</choose>
			)
		)
		<where>
			rn between #{startRow} and #{endRow}
		</where>
		
	</select>
	
	
	
	<!-- 출처: http://fruitdev.tistory.com/187 [과일가게 개발자] -->
	<!-- 이벤트 설정 -->
	<update id="updateEventSetFood" parameterType="map">
		UPDATE TR_FOOD
		
		<choose>
			<when test="setEventCode.equals('CLEAR')">
				SET E_EVTCODE = NULL
			</when>
			<otherwise>
				SET E_EVTCODE = #{setEventCode}
			</otherwise>
		</choose>
		
		WHERE F_FDCODE IN 
			<foreach collection="chk_fdcodeArr" item="fdcodeArr" open="(" close=")" separator=",">
				#{fdcodeArr}
			</foreach>
	</update>
	
</mapper>